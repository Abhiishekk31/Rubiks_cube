{
    "tasks": [
        {
            "type": "cppbuild",
            "label": "C/C++: clang build active file",
            "command": "/usr/bin/clang",
            "args": [
                "-fcolor-diagnostics",
                "-fansi-escape-codes",
                "-g",
                "${file}",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger."
        },
        {
            "type": "cppbuild",
            "label": "C/C++: g++ build active file",
            "command": "/usr/bin/g++",
            "args": [
                "-fdiagnostics-color=always",
                "-g",
                "${file}",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build",
            "detail": "compiler: /usr/bin/g++"
        },
        {
            "label": "build and run all sources",
            "type": "shell",
            "command": "bash",
            "args": [
                "-c",
                "g++ -std=c++14 -Wall '${fileDirname}/main.cpp' '${fileDirname}/Model/RubiksCube.cpp' '${fileDirname}/Model/RubiksCube3dArray.cpp' -o '${fileDirname}/cube' && '${fileDirname}/cube'"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [
                {
                    "owner": "cpp",
                    "fileLocation": [
                        "relative",
                        "${workspaceFolder}"
                    ],
                    "pattern": {
                        "regexp": "^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "message": 4
                    }
                }
            ],
            "detail": "Custom build task to compile and run all source files."
        }
    ],
    "version": "2.0.0"
}